{"version":3,"sources":["components/CategoryAdd.js","helpers/GetGifs.js","components/GridGifItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["CategoryAdd","setCategorias","useState","value","setValue","onSubmit","e","preventDefault","categs","type","onChange","target","search","categoria","a","url","encodeURI","fetch","respu","json","data","gifs","map","id","title","images","downsized_medium","GridGifItem","img","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","className","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMA8BeA,EA3BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEXC,mBAAS,IAFE,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAerC,OACI,sBAAMC,SAPS,SAACC,GAEhBA,EAAEC,iBACFN,GAAc,SAAAO,GAAM,OAAKL,GAAL,mBAAcK,QAIlC,SACI,uBAAOC,KAAK,OAAON,MAAOA,EAAOO,SAbrB,SAACJ,GAEjBF,EAASE,EAAEK,OAAOR,a,uBCTbS,EAAM,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAERC,EAFQ,kDAEyCC,UAAUH,GAFnD,+DAGMI,MAAMF,GAHZ,cAGRG,EAHQ,gBAIOA,EAAMC,OAJb,uBAIPC,EAJO,EAIPA,KAEDC,EAAOD,EAAKE,KAAI,SAAAR,GAEd,MAAO,CACHS,GAAGT,EAAES,GACLC,MAAMV,EAAEU,MACRT,IAAID,EAAEW,OAAOC,iBAAiBX,QAX5B,kBAeHM,GAfG,4CAAH,sDCENM,EAAc,SAAC,GAAW,IAAVC,EAAS,EAATA,IACzB,OACI,gCACI,qBAAKC,IAAKD,EAAIb,IAAKe,IAAKF,EAAIJ,QAC5B,4BAAII,EAAIJ,YCFPO,EAAU,SAAC,GAAiB,IAAhBlB,EAAe,EAAfA,UAAe,ECDZ,SAACA,GAAe,IAAD,EACbX,mBACtB,CACIkB,KAAK,GACLY,SAAQ,IAJuB,mBAChCC,EADgC,KACzBC,EADyB,KAwBvC,OAhBAC,qBAAU,WACNvB,EAAOC,GAAWuB,MAAK,SAAAC,GAGfH,EAAS,CACLd,KAAKiB,EACLL,SAAQ,SAIrB,CAACnB,IAMGoB,EDXuBK,CAAazB,GAA/BY,EAZwB,EAY7BL,KAAYY,EAZiB,EAYjBA,QAEnB,OACI,qCACI,6BAAKnB,IAEJmB,GAAW,yCAEZ,qBAAKO,UAAU,sDAAf,SAEQd,EAAOH,KAAI,SAAAR,GACP,OAAO,cAAC,EAAD,CAAwBc,IAAKd,GAAXA,EAAES,aEWpCiB,EAlCM,WACpB,IAAD,EAEwCtC,mBAAS,CAAC,WAFlD,mBAEWuC,EAFX,KAEuBxC,EAFvB,KAUI,OACI,qCACI,8CAEA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBAEA,6BAEQwC,EAAWnB,KAAI,SAAAT,GAGP,OAAO,cAAC,EAAD,CAASA,UAAWA,EAApB,SAAgDA,GAAZA,Y,MCtBvE6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.6281369c.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst CategoryAdd = ({setCategorias}) => {\r\n\r\n    const [value, setValue] = useState('');\r\n\r\n    const changeValue = (e) =>\r\n    {\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    const submitForm = (e) =>\r\n    {\r\n        e.preventDefault();\r\n        setCategorias(categs => [value,...categs]);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitForm}>\r\n            <input type=\"text\" value={value} onChange={changeValue}></input>\r\n        </form>\r\n    )\r\n}\r\n\r\nCategoryAdd.propTypes =\r\n{\r\n    setCategorias:PropTypes.func.isRequired\r\n}\r\n\r\nexport default CategoryAdd\r\n","export const search = async(categoria)=>\r\n    {\r\n        const url = `https://api.giphy.com/v1/gifs/search?q= ${encodeURI(categoria)}&api_key=NjKj3dD0UTaJXVaz4fLspkylZCuHkPMy&limit=10`;\r\n        const respu = await fetch(url);\r\n        const {data} = await respu.json();\r\n\r\n        const gifs = data.map(a=>\r\n            {\r\n                return {\r\n                    id:a.id,\r\n                    title:a.title,\r\n                    url:a.images.downsized_medium.url\r\n                }\r\n            });\r\n\r\n            return gifs;\r\n\r\n    }","import React from 'react'\r\n\r\nexport const GridGifItem = ({img}) => {\r\n    return (\r\n        <div>\r\n            <img src={img.url} alt={img.title}></img>\r\n            <p>{img.title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState,useEffect } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GridGifItem } from './GridGifItem';\r\n\r\nexport const GifGrid = ({categoria}) => {\r\n\r\n    // const [imagenes,setImagenes] = useState([]);\r\n\r\n    // useEffect(()=>\r\n    // {\r\n    //     search(categoria).then(imgs =>\r\n    //         {\r\n    //             setImagenes(imgs);\r\n    //         });\r\n    // },[categoria])\r\n\r\n    const {data:images,loading} = useFetchGifs(categoria);\r\n\r\n    return (\r\n        <>\r\n            <h3>{categoria}</h3>\r\n\r\n            {loading && <p>Cargando</p>}\r\n\r\n            <div className='animate__animated animate__fadeIn animate__delay-2s'>\r\n                {\r\n                    images.map(a => {\r\n                        return <GridGifItem key={a.id} img={a}></GridGifItem> \r\n                    })\r\n                }\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import {useState,useEffect} from \"react\";\r\n import { search } from '../helpers/GetGifs';\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n    const [state, setstate] = useState(\r\n        {\r\n            data:[],\r\n            loading:true\r\n        }\r\n    );\r\n    \r\n    useEffect(() => {\r\n        search(categoria).then(imgs=>\r\n        {\r\n\r\n                setstate({\r\n                    data:imgs,\r\n                    loading:false\r\n                });\r\n\r\n        })\r\n    }, [categoria])\r\n\r\n    \r\n        \r\n    \r\n\r\n    return state;\r\n\r\n}\r\n","import React, {useState} from 'react';\r\nimport CategoryAdd from './components/CategoryAdd';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = ()=>\r\n{\r\n\r\n    const [categorias, setCategorias] = useState(['Naruto']);\r\n\r\n    // const agregarCategoria = ()=>\r\n    // {\r\n    //     setCategorias([...categorias,'Supercampeones']);\r\n    //     // setCategorias(categs => [...categs,'Supercampeones'])\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n\r\n            <CategoryAdd setCategorias={setCategorias}/>\r\n\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categorias.map(categoria=>\r\n                        {\r\n                            // return <li key={categoria}>{categoria}</li>\r\n                            return <GifGrid categoria={categoria} key={categoria}>{categoria}</GifGrid>\r\n                        })\r\n                }\r\n            </ol>\r\n\r\n            {/* <button onClick={agregarCategoria}>Agregar</button> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}